<?phpclass Despesa extends AppModel {    public $useTable = 'despesas';    public $name = 'Despesa';    public $primaryKey = 'id';    public $validate = array(        'nome' => array(            'notEmpty' => array(                'rule' => array('notEmpty'),                'mensagem' => 'Este campo é requirido',            ),        ),        'fixa' => array(            'notEmpty' => array(                'rule' => array('notEmpty'),                'mensagem' => 'Este campo é requirido',            ),        ),        'valor' => array(            'notEmpty' => array(                'rule' => array('notEmpty'),                'mensagem' => 'Este campo é requirido',            ),        ),        'data_vencimento' => array(            'notEmpty' => array(                'rule' => array('notEmpty'),                'mensagem' => 'Este campo é requirido',            ),        ),    );    public function filtrar($empresasId, $dataInicio = null, $dataFim = null) {        try {            $DATA = NULL;            if (!empty($dataInicio) && !empty($dataFim)) {                $DATA = " OR (  Despesa.empresas_id = {$empresasId} AND fixa = 0 AND (DATE(Despesa.data_vencimento) BETWEEN DATE('{$dataInicio}') AND DATE('{$dataFim}')) )";            } else if (!empty($dataInicio) && empty($dataFim)) {                $DATA = " OR (  Despesa.empresas_id = {$empresasId} AND fixa = 0 AND (DATE(Despesa.data_vencimento) BETWEEN DATE('{$dataInicio}') AND DATE('{$dataInicio}')) )";            }            $sql = "SELECT 						Despesa.id,						Despesa.nome,						Despesa.valor,						Despesa.fixa,						Despesa.data_vencimento,						Despesa.dia_de_vencimento					FROM						despesas AS Despesa					WHERE						Despesa.empresas_id = {$empresasId}                                                     AND fixa = 1							" . $DATA . "					;";            return $this->query($sql);        } catch (Exception $ex) {            throw $ex;        }    }    public function totalDespesaMes($empresasId, $dataInicio = null, $dataFim = null) {        try {            $DATA = NULL;            if (!empty($dataInicio) && !empty($dataFim)) {                $DATA = " OR (  Despesa.empresas_id = {$empresasId} AND fixa = 0 AND (DATE(Despesa.data_vencimento) BETWEEN DATE('{$dataInicio}') AND DATE('{$dataFim}')) )";            } else if (!empty($dataInicio) && empty($dataFim)) {                $DATA = " OR (  Despesa.empresas_id = {$empresasId} AND fixa = 0 AND (DATE(Despesa.data_vencimento) BETWEEN DATE('{$dataInicio}') AND DATE('{$dataInicio}')) )";            }            $sql = "SELECT                         SUM(Despesa.valor)                    FROM                        despesas AS Despesa                    WHERE                        Despesa.empresas_id = {$empresasId}                            AND ( fixa = 1 )"                             . $DATA . ";";            return $this->query($sql);        } catch (Exception $ex) {            throw $ex;        }    }    public function getDespesasAleatorias($empresasId, $data) {        try {            $Aleatorias = array();            $sql = "SELECT 						*					FROM						reservas.despesas					WHERE						empresas_id = {$empresasId}						AND fixa = 0 						AND						CONCAT(MONTH(data_vencimento),								'-',								YEAR(data_vencimento)) = CONCAT(MONTH('{$data}'),								'-',								YEAR('{$data}'))								;";            $despesasAleatorias = $this->query($sql);            foreach ($despesasAleatorias as $registro2) {                $Aleatorias[] = new Despesas(                        $registro2['id'], $registro2['nome'], $registro2['data_vencimento'], $registro2['dia_de_vencimento'], $registro2['valor'], $registro2['fixa'], $registro2['created'], $registro2['observacao']                );            }            return $Aleatorias;        } catch (Exception $ex) {            throw $ex;        }    }    public function despesasHoje( $empresaId, $limit = 20 ){        try {            $sql = "SELECT                         id, nome, valor, data_vencimento, fixa                    FROM                        reservas.despesas                    WHERE                        DATE(data_vencimento) = DATE(CURRENT_DATE())                            AND empresas_id = {$empresaId}                    ORDER BY data_vencimento ASC                    LIMIT {$limit} ;";            return $this->query($sql);        } catch (Exception $ex) {                    }    }            }